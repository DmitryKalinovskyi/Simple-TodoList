@using Simple_TodoList.ViewModels
@model IndexViewModel

@{
    ViewData["Title"] = "Home Page";
}

 <div class="container mt-5">
    <form class="row g-3" asp-action="AddTask">
        <div class="col-auto">
            <label for="inputTask" class="visually-hidden">Task name</label>
            <input name="Name" class="form-control" id="inputTask" placeholder="Enter task name...">
        </div>
        <div class="col-auto">
            <select class="form-select" name="CategoryId">
                <option value="" selected> Without category</option>
                @foreach(var category in Model.Categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
        <div class="col-auto">
            <input name="Deadline" type="datetime-local" class="form-control"/>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary mb-3">Add task</button>
        </div>
    </form> 

    <div>
        @{
            async Task RenderTask(TaskModel task)
            {
                    <div class="my-2">
                    <div class="d-flex align-items-center justify-content-between">

                        <form asp-action="UpdateTaskComplition" method="post" class="d-flex align-items-center">
                            <input id="taskInput-@task.Id" name="isCompleted" @(task.IsCompleted?"checked":"") type="checkbox" onchange="this.form.submit()"/>
                            <label for="taskInput-@task.Id">
                                @if (task.IsCompleted)
                                {
                                    <s>@task.Name</s>
                                }
                                else
                                {
                                    @task.Name
                                }
                            </label>
                            <input  name="id" value="@task.Id" hidden/>
                            @if (task.CategoryId != null)
                            {
                                <div class="badge mx-2 bg-danger">
                                    @Model.Categories.First(category => category.Id == task.CategoryId).Name
                                </div>
                            }
                        </form>

                        <form asp-action="RemoveTask" method="post">
                            

                            @if (task.Deadline != null)
                            {
                                <div class="badge bg-secondary">
                                    @task.Deadline
                                </div>
                            }
                            <button class="btn btn-primary">
                                X
                            </button>
                            <input name="id" value="@task.Id" hidden />
                        </form>
                    </div>
                </div>
            }

            foreach (var task in Model.Tasks)
                await RenderTask(task);
        }
    </div>
 </div>